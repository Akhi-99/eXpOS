alias curr_pid R1;
curr_pid = [SYSTEM_STATUS_TABLE+1];

SP=SP+1;
[SP]=BP;
//multipush (BP);

alias process_table_entry R2;
process_table_entry = PROCESS_TABLE + curr_pid*16;

[process_table_entry + 12]=SP%512;
[process_table_entry + 14]=PTBR;
[process_table_entry + 15]=PTLR;

alias i R3;
i=(curr_pid+1)%16;


while(i!=curr_pid) do
	if(i!=0) then
	 if([PROCESS_TABLE + i*16 + 4]==CREATED) then
		break;
	 endif;
	 if([PROCESS_TABLE + i*16 + 4]==READY) then
		break;
	 endif;
	endif;
	i=(i+1)%16;
endwhile;
	
if(([PROCESS_TABLE + i*16 + 4]!=CREATED) && ([PROCESS_TABLE + i*16 + 4]!=READY)) then
	i=0;
endif;

alias new_process_table R5;
new_process_table = PROCESS_TABLE + i*16;

SP = [new_process_table + 11]*512 + [new_process_table + 12];
PTBR=[new_process_table + 14];
PTLR=[new_process_table + 15];
[SYSTEM_STATUS_TABLE +1]=i;

if([new_process_table+ 4]==CREATED) then
	SP=[new_process_table + 13];
	[new_process_table + 4]=RUNNING;
	[new_process_table + 9]=0;
	BP=[[new_process_table + 11]*512];
	ireturn;
endif;

[new_process_table + 4]=RUNNING;
BP=[SP];
SP=SP-1;
return;

