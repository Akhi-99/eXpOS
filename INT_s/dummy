alias pte R10;
pte = PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16;
[pte + 13]=SP;
alias user_sp R0;
user_sp =SP;
SP=[pte + 11]*512 -1;
[pte +9]=21;

alias ret_val R9;
ret_val= [PTBR + 2*(user_sp-1)/512]*512 + (user_sp-1)%512;

if([SYSTEM_STATUS_TABLE+1]!=2 || [pte +3]!=1) then
	[ret_val]=-1;
	[pte +9]=0;
	SP=user_sp;
	ireturn;
endif;

alias i R1;
i=2;
while(i<16) do
	if(i!=[SYSTEM_STATUS_TABLE+1]) then			//kill all 
		backup;
		R1=5;
		R2=[SYSTEM_STATUS_TABLE+1];
		call MOD_1;
		restore;
	endif;
i=i+1;
endwhile;

i=0;
while(i<4) do
	if([BUFFER_TABLE + 4*i +1]==1) then
		backup;
		R1=1;
		R2=[SYSTEM_STATUS_TABLE+1];		//disk store
		R3= 71+i;
		R4=[BUFFER_TABLE + 4*i +0];
		call MOD_4;
		restore;
	endif;
i=i+1;
endwhile;


//COMMITING CHANGES BACK TO DISK

//INODE
multipush(R0,R1,R2,R3,R4);
R1=1;
R2=[SYSTEM_STATUS_TABLE+1];
R3=59;
R4=3;
call MOD_4;
multipop(R0,R1,R2,R3,R4);

multipush(R0,R1,R2,R3,R4);
R1=1;
R2=[SYSTEM_STATUS_TABLE+1];
R3=60;
R4=4;
call MOD_4;
multipop(R0,R1,R2,R3,R4);

//ROOT_FILE
multipush(R0,R1,R2,R3,R4);
R1=1;
R2=[SYSTEM_STATUS_TABLE+1];
R3=62;
R4=5;
call MOD_4;
multipop(R0,R1,R2,R3,R4);

//DISK_FREE_LIST
multipush(R0,R1,R2,R3,R4);
R1=1;
R2=[SYSTEM_STATUS_TABLE+1];
R3=61;
R4=2;
call MOD_4;
multipop(R0,R1,R2,R3,R4);

halt;

